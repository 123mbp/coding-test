{"version":3,"sources":["util/styleConstants.ts","util/Integrations/index.ts","components/Text.tsx","components/Icons.tsx","util/caseConversions.ts","components/Warehouse.tsx","components/Inventory.tsx","util/formatAddress.ts","util/Integrations/shopify.ts","util/Integrations/wooCommerce.ts","components/Order.tsx","util/data.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ESizes","EWeights","ETextColors","Integrations","Wrapper","styled","span","weight","size","color","Text","children","Medium","Regular","textProps","Black","PickIcon","width","height","viewBox","fill","xmlns","d","MinusIcon","PlusIcon","capitalise","text","charAt","toUpperCase","slice","Container","div","ImagePlaceholder","Row","SmallRow","Details","SelectionDetails","ItemSummaryRowUnderLined","ItemSummaryRow","Warehouse","props","lineItems","map","item","Small","Gray","description","options","option","Disabled","name","Bold","value","sku","Large","shippingType","Primary","Math","round","shippingPrice","toFixed","DetailsCol","PriceContainer","DividerContainer","OptionRow","RowMarginTop","DividerContainerNoBorder","Inventory","VeryLarge","customerName","shippingAddress","chunk","customerEmail","formatAddress","longAddress","join","integrations","shopify","payload","createdAt","orderNumber","Number","order_number","date","channel","order_line_items","SKU","quantity","unitPrice","UnitPrice","id","option_id","shipping_purchased","service_name","amount_paid","shipping_details","address","contact_name","contact_email","woo_commerce","optionsMap","Options","reduce","obj","Id","Name","Value","Ref","LineItems","Sku","Description","Quantity","optionId","ShippingType","ShippingPrice","ShippingAddress","ShippingContactName","ShippingContactEmail","ReturnContainer","ReturnText","Header","ItemSummary","LeftAlignedRow","RightAlignedRow","Order","order","system","orderInfo","integration","created_at","getUnifiedOrder","SystemSpecificContent","warehouse","inventory","format","Date","length","IntegrationOrder1","product_variant_id","currency","customer_details","email","IntegrationOrder2","Currency","VariantId","CustomerId","CustomerName","CustomerEmail","Nav","App","to","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.381dbd16.chunk.js","sourcesContent":["export enum ESizes {\n  Small = \"font-size: 14px; line-height: 21px; letter-spacing: 0.25px;\",\n  Medium = \"font-size: 16px; line-height: 24px; letter-spacing: 0.15px;\",\n  Large = \"font-size: 18px; line-height: 21px; letter-spacing: 0.1px;\",\n  VeryLarge = \"font-size: 20px; line-height: 30px; letter-spacing: 0.15px;\",\n}\n\nexport enum EWeights {\n  Regular = \"font-weight: 400;\",\n  Bold = \"font-weight: 500;\",\n}\n\nexport enum ETextColors {\n  Primary = \"color: var(--color-primary);\",\n  Black = \"color: var(--color-text-black);\",\n  Gray = \"color: var(--color-text-gray);\",\n  Disabled = \"color: var(--color-text-disabled)\",\n}\n","import { convertFromShopify, ShopifyPayload } from \"./shopify\";\nimport { convertFromWooCommerce, WooCommercePayload } from \"./wooCommerce\";\nimport { ShortAddress } from \"../formatAddress\";\n\nexport function getUnifiedOrder(order: RawOrder): UnifiedOrder {\n  const name: keyof IntegrationsInterface = order.integration.name;\n  const { created_at, payload } = order;\n  return integrations[name](payload, created_at);\n}\n\nexport interface UnifiedOrder {\n  orderNumber: number;\n  date: string;\n  channel: Integrations;\n  lineItems: LineItem[];\n  shippingType: string;\n  shippingPrice: number;\n  shippingAddress: ShortAddress;\n  customerName: string;\n  customerEmail: string;\n}\n\nexport enum Integrations {\n  shopify = \"Shopify\",\n  woo_commerce = \"WooCommerce\",\n}\n\nexport interface Option {\n  id: string | number;\n  name: string;\n  value: string | number;\n}\n\nexport interface LineItem {\n  sku: string;\n  description: string;\n  quantity: number;\n  unitPrice: number;\n  options: Option[];\n}\n\nexport interface RawOrder {\n  integration: {\n    name: keyof IntegrationsInterface;\n  };\n  created_at: string;\n  payload: any;\n}\n\ninterface IntegrationsInterface {\n  shopify: (payload: ShopifyPayload, createdAt: string) => UnifiedOrder;\n  woo_commerce: (\n    payload: WooCommercePayload,\n    createdAt: string\n  ) => UnifiedOrder;\n}\n\nconst integrations: IntegrationsInterface = {\n  shopify: convertFromShopify,\n  woo_commerce: convertFromWooCommerce,\n};\n","import React from \"react\";\nimport { ESizes, EWeights, ETextColors } from \"../util/styleConstants\";\nimport styled from \"@emotion/styled\";\n\nconst Wrapper = styled.span`\n  ${({\n    weight,\n    size,\n    color,\n  }: {\n    weight: string;\n    size: string;\n    color: string;\n  }) => `${weight} ${size} ${color}`}\n`;\n\ninterface Props {\n  children: React.ReactNode;\n  size?: ESizes;\n  weight?: EWeights;\n  color?: ETextColors;\n}\n\nconst Text = ({\n  children,\n  size = ESizes.Medium,\n  weight = EWeights.Regular,\n  color = ETextColors.Black,\n}: Props) => {\n  const textProps = { size, weight, color };\n  return <Wrapper {...textProps}>{children}</Wrapper>;\n};\n\nexport default Text;\n","export const PickIcon = () => (\n  <svg\n    width=\"18\"\n    height=\"20\"\n    viewBox=\"0 0 18 20\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M15 15H3V13H15V15ZM15 11H3V9H15V11ZM15 7H3V5H15V7ZM0 20L1.5 18.5L3 20L4.5 18.5L6 20L7.5 18.5L9 20L10.5 18.5L12 20L13.5 18.5L15 20L16.5 18.5L18 20V0L16.5 1.5L15 0L13.5 1.5L12 0L10.5 1.5L9 0L7.5 1.5L6 0L4.5 1.5L3 0L1.5 1.5L0 0V20Z\"\n      fill=\"#728F9B\"\n    />\n  </svg>\n);\n\nexport const MinusIcon = () => (\n  <svg\n    width=\"20\"\n    height=\"20\"\n    viewBox=\"0 0 20 20\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM15 11H5V9H15V11Z\"\n      fill=\"#4D6772\"\n    />\n  </svg>\n);\n\nexport const PlusIcon = () => (\n  <svg\n    width=\"20\"\n    height=\"20\"\n    viewBox=\"0 0 20 20\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM15 11H11V15H9V11H5V9H9V5H11V9H15V11Z\"\n      fill=\"#4D6772\"\n    />\n  </svg>\n);\n","export const capitalise = (text: string) =>\n  text.charAt(0).toUpperCase() + text.slice(1);\n","import React from \"react\";\nimport Text from \"./Text\";\nimport { MinusIcon, PlusIcon } from \"./Icons\";\nimport { ESizes, EWeights, ETextColors } from \"../util/styleConstants\";\nimport { capitalise } from \"../util/caseConversions\";\nimport { UnifiedOrder, LineItem, Option } from \"../util/Integrations\";\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.div`\n  > * + * {\n    border-top: 2px solid var(--color-border-gray);\n  }\n`;\n\nconst ImagePlaceholder = styled.div`\n  height: 94px;\n  width: 75px;\n  background-color: rgba(114, 143, 155, 0.25);\n  border-radius: 3px;\n`;\n\nconst Row = styled.div`\n  width: 100%;\n  padding-top: 24px;\n  padding-bottom: 24px;\n  display: flex;\n  align-items: center:\n`;\n\nconst SmallRow = styled.div`\n  display: flex;\n  align-items: center;\n  > * + * {\n    margin-left: 6px;\n  }\n`;\n\nconst Details = styled.div`\n  margin-left: 24px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst SelectionDetails = styled.div`\n  margin-left: auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst ItemSummaryRowUnderLined = styled.div`\n  width: 100%;\n  border-bottom: 2px solid var(--color-border-gray);\n  display: flex;\n  align-items: center;\n  padding-bottom: 4px;\n`;\n\nconst ItemSummaryRow = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  > * {\n    margin-top: 16px;\n  }\n`;\n\nconst Warehouse = (props: UnifiedOrder) => (\n  <>\n    <Container>\n      {props.lineItems.map((item: LineItem) => (\n        <Row key={item.sku}>\n          <ImagePlaceholder />\n          <Details>\n            <Text size={ESizes.Small} color={ETextColors.Gray}>\n              {item.description}\n            </Text>\n            {item.options.map((option: Option) => (\n              <Text\n                key={option.name}\n                size={ESizes.Small}\n                color={ETextColors.Disabled}\n              >\n                {capitalise(option.name)}{\" \"}\n                <Text\n                  size={ESizes.Small}\n                  weight={EWeights.Bold}\n                  color={ETextColors.Gray}\n                >\n                  {typeof option.value === \"string\"\n                    ? capitalise(option.value)\n                    : option.value}\n                </Text>\n              </Text>\n            ))}\n            <Text size={ESizes.Small} color={ETextColors.Disabled}>\n              {\"SKU \"}\n              <Text\n                size={ESizes.Small}\n                weight={EWeights.Bold}\n                color={ETextColors.Gray}\n              >\n                {item.sku}\n              </Text>\n            </Text>\n          </Details>\n          <SelectionDetails>\n            <SmallRow>\n              <MinusIcon />\n              <Text size={ESizes.Large} weight={EWeights.Bold}>\n                2/3\n              </Text>\n              <PlusIcon />\n            </SmallRow>\n          </SelectionDetails>\n        </Row>\n      ))}\n    </Container>\n    <ItemSummaryRowUnderLined>\n      <Text>Shipping Information</Text>\n    </ItemSummaryRowUnderLined>\n    <ItemSummaryRow>\n      <Text size={ESizes.Small} weight={EWeights.Bold}>\n        Service purchased\n      </Text>\n      <Text size={ESizes.Small}>{props.shippingType}</Text>\n    </ItemSummaryRow>\n    <ItemSummaryRow>\n      <Text size={ESizes.Small} weight={EWeights.Bold}>\n        Shipping paid\n      </Text>\n      <Text size={ESizes.Small} color={ETextColors.Primary}>\n        ${(Math.round(props.shippingPrice * 100) / 100).toFixed(2)}\n      </Text>\n    </ItemSummaryRow>\n  </>\n);\nexport default Warehouse;\n","import React from \"react\";\nimport Text from \"./Text\";\nimport { ESizes, EWeights, ETextColors } from \"../util/styleConstants\";\nimport { capitalise } from \"../util/caseConversions\";\nimport { UnifiedOrder, LineItem, Option } from \"../util/Integrations\";\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.div`\n  > * + * {\n    border-top: 2px solid var(--color-border-gray);\n  }\n`;\n\nconst ImagePlaceholder = styled.div`\n  height: 160px;\n  width: 128px;\n  background-color: rgba(114, 143, 155, 0.25);\n  border-radius: 3px;\n`;\n\nconst Row = styled.div`\n  width: 100%;\n  padding-top: 24px;\n  display: flex;\n  align-items: center:\n  margin-bottom: 24px;\n`;\n\nconst DetailsCol = styled.div`\n  margin: 24px 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  > * + * {\n    margin-top: 12px;\n  }\n`;\n\nconst PriceContainer = styled.div`\n  margin-top: 16px;\n  margin-left: 16px;\n`;\n\nconst ItemSummaryRowUnderLined = styled.div`\n  width: 100%;\n  border-bottom: 2px solid var(--color-border-gray);\n  display: flex;\n  align-items: center;\n  margin-bottom: 24px;\n  padding-top: 12px;\n  padding-bottom: 4px;\n`;\n\nconst DividerContainer = styled.div`\n  padding-right: 16px;\n  border-right: 1px solid var(--color-border-gray);\n`;\n\nconst OptionRow = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  > * + * {\n    padding-left: 16px;\n  }\n`;\n\nconst RowMarginTop = styled.div`\n  margin-top: 24px;\n`;\n\nconst DividerContainerNoBorder = styled.div`\n  padding: 0 16px;\n`;\n\nconst Inventory = (props: UnifiedOrder) => (\n  <>\n    <Container>\n      {props.lineItems.map((item: LineItem) => (\n        <div key={item.sku}>\n          <Row>\n            <ImagePlaceholder />\n            <PriceContainer>\n              <Text size={ESizes.VeryLarge}>\n                $ {(Math.round(props.shippingPrice * 100) / 100).toFixed(2)}\n              </Text>\n            </PriceContainer>\n          </Row>\n          <DetailsCol>\n            <OptionRow>\n              <Text size={ESizes.Small} color={ETextColors.Gray}>\n                {item.description}\n              </Text>\n            </OptionRow>\n            <OptionRow>\n              {item.options.map((option: Option) => (\n                <DividerContainer key={option.name}>\n                  <Text size={ESizes.Small} color={ETextColors.Disabled}>\n                    {capitalise(option.name)}\n                    {\": \"}\n                    <Text\n                      size={ESizes.Small}\n                      weight={EWeights.Bold}\n                      color={ETextColors.Gray}\n                    >\n                      {typeof option.value === \"string\"\n                        ? capitalise(option.value)\n                        : option.value}\n                    </Text>\n                  </Text>\n                </DividerContainer>\n              ))}\n            </OptionRow>\n            <OptionRow>\n              <DividerContainer>\n                <Text size={ESizes.Small} color={ETextColors.Disabled}>\n                  {\"Qty: \"}\n                  <Text\n                    size={ESizes.Small}\n                    weight={EWeights.Bold}\n                    color={ETextColors.Gray}\n                  >\n                    1\n                  </Text>\n                </Text>\n              </DividerContainer>\n              <DividerContainerNoBorder>\n                <Text size={ESizes.Small} color={ETextColors.Disabled}>\n                  {\"SKU: \"}\n                  <Text\n                    size={ESizes.Small}\n                    weight={EWeights.Bold}\n                    color={ETextColors.Gray}\n                  >\n                    {item.sku}\n                  </Text>\n                </Text>\n              </DividerContainerNoBorder>\n            </OptionRow>\n          </DetailsCol>\n        </div>\n      ))}\n    </Container>\n    <ItemSummaryRowUnderLined>\n      <Text>Customer Information</Text>\n    </ItemSummaryRowUnderLined>\n    <div>\n      <Text size={ESizes.Small} color={ETextColors.Gray}>\n        {props.customerName}\n      </Text>\n    </div>\n    {props.shippingAddress.map((chunk: string) => (\n      <div key={chunk}>\n        <Text size={ESizes.Small} color={ETextColors.Gray}>\n          {chunk}\n        </Text>\n      </div>\n    ))}\n    <RowMarginTop>\n      <Text size={ESizes.Small} color={ETextColors.Gray}>\n        {props.customerEmail}\n      </Text>\n    </RowMarginTop>\n  </>\n);\n\nexport default Inventory;\n","export type ShortAddress = [string, string, string];\n\nexport const formatAddress = (longAddress: string[]): ShortAddress => {\n  return [\n    longAddress[0],\n    [longAddress[1], longAddress[2], longAddress[3]].join(\" \"),\n    longAddress[4],\n  ];\n};\n","import { UnifiedOrder, Integrations } from \"./\";\nimport { formatAddress } from \"../formatAddress\";\n\ninterface ShopifyOption {\n  name: string;\n  value: string;\n  option_id: number;\n}\n\ninterface ShopifyLineItem {\n  product_variant_id: number;\n  SKU: string;\n  description: string;\n  quantity: number;\n  UnitPrice: number;\n  options: ShopifyOption[];\n}\n\nexport interface ShopifyPayload {\n  order_number: string;\n  order_line_items: ShopifyLineItem[];\n  shipping_purchased: {\n    service_name: string;\n    amount_paid: number;\n  };\n  shipping_details: {\n    contact_name: string;\n    contact_email: string;\n    address: string[];\n  };\n}\n\nexport const convertFromShopify = (\n  payload: ShopifyPayload,\n  createdAt: string\n): UnifiedOrder => {\n  return {\n    orderNumber: Number(payload.order_number),\n    date: createdAt,\n    channel: Integrations.shopify,\n    lineItems: payload.order_line_items.map((item: ShopifyLineItem) => ({\n      sku: item.SKU,\n      description: item.description,\n      quantity: item.quantity,\n      unitPrice: item.UnitPrice,\n      options: item.options.map((option: ShopifyOption) => ({\n        id: option.option_id,\n        value: option.value,\n        name: option.name,\n      })),\n    })),\n    shippingType: payload.shipping_purchased.service_name,\n    shippingPrice: payload.shipping_purchased.amount_paid,\n    shippingAddress: formatAddress(payload.shipping_details.address),\n    customerName: payload.shipping_details.contact_name,\n    customerEmail: payload.shipping_details.contact_email,\n  };\n};\n","import { UnifiedOrder, Integrations } from \"./\";\nimport { formatAddress } from \"../formatAddress\";\n\ninterface WooCommerceOption {\n  Name: string;\n  Value: string;\n  Id: string;\n}\n\ninterface WooCommerceLineItem {\n  VariantId: string;\n  Sku: string;\n  Description: string;\n  Quantity: number;\n  UnitPrice: number;\n  Options: string[];\n}\n\nexport interface WooCommercePayload {\n  Ref: string;\n  LineItems: WooCommerceLineItem[];\n  Options: WooCommerceOption[];\n  shipping_purchased: {\n    service_name: string;\n    amount_paid: number;\n  };\n  ShippingType: string;\n  ShippingPrice: number;\n  ShippingContactName: string;\n  ShippingContactEmail: string;\n  ShippingAddress: string[];\n  CustomerName: string;\n  CustomerEmail: string;\n}\n\nexport const convertFromWooCommerce = (\n  payload: WooCommercePayload,\n  createdAt: string\n): UnifiedOrder => {\n  const optionsMap: any = payload.Options.reduce(\n    (obj, { Id, Name, Value }) => ({\n      ...obj,\n      [Id]: { id: Id, name: Name, value: Value },\n    }),\n    {}\n  );\n  return {\n    orderNumber: Number(payload.Ref),\n    date: createdAt,\n    channel: Integrations.woo_commerce,\n    lineItems: payload.LineItems.map((item: WooCommerceLineItem) => ({\n      sku: item.Sku,\n      description: item.Description,\n      quantity: item.Quantity,\n      unitPrice: item.UnitPrice,\n      options: item.Options.map((optionId: string) => optionsMap[optionId]),\n    })),\n    shippingType: payload.ShippingType,\n    shippingPrice: payload.ShippingPrice,\n    shippingAddress: formatAddress(payload.ShippingAddress),\n    customerName: payload.ShippingContactName,\n    customerEmail: payload.ShippingContactEmail,\n  };\n};\n","import React from \"react\";\nimport { format } from \"date-fns\";\nimport Text from \"./Text\";\nimport Warehouse from \"./Warehouse\";\nimport Inventory from \"./Inventory\";\nimport { getUnifiedOrder, RawOrder, UnifiedOrder } from \"../util/Integrations\";\nimport { PickIcon } from \"./Icons\";\nimport { ESizes, EWeights, ETextColors } from \"../util/styleConstants\";\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.div`\n  width: 414px;\n  background-color: var(--color-background-gray);\n  padding: 28px 16px;\n`;\n\nconst ReturnContainer = styled.div`\n  padding: 8px;\n  cursor: pointer;\n  margin-bottom: 14px;\n`;\n\nconst ReturnText = styled.span`\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: 1.25px;\n  line-height: 16px;\n  color: var(--color-primary);\n`;\n\nconst Header = styled.div`\n  border: 1px solid var(--color-border-gray);\n  display: flex:\n  flex-direction: column;\n  padding: 24px 32px 20px 32px;\n  > * + * {\n    margin-top: 4px;\n    display: block;\n  }\n`;\n\nconst ItemSummary = styled.div`\n  width: 100%;\n  padding: 32px 32px 30px 32px;\n  border-left: 1px solid var(--color-border-gray);\n  border-right: 1px solid var(--color-border-gray);\n  border-bottom: 1px solid var(--color-border-gray);\n`;\n\nconst ItemSummaryRowUnderLined = styled.div`\n  width: 100%;\n  border-bottom: 2px solid var(--color-border-gray);\n  display: flex;\n  align-items: center;\n  padding-bottom: 4px;\n`;\n\nconst LeftAlignedRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n`;\n\nconst RightAlignedRow = styled.div`\n  margin-left: auto;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  > * + * {\n    margin-left: 10px;\n  }\n`;\n\ninterface ISystemMap {\n  warehouse: (props: UnifiedOrder) => JSX.Element;\n  inventory: (props: UnifiedOrder) => JSX.Element;\n}\n\nconst Order = ({\n  order,\n  system,\n}: {\n  order: RawOrder;\n  system: keyof ISystemMap;\n}) => {\n  const orderInfo = getUnifiedOrder(order);\n\n  const systemMap: ISystemMap = {\n    warehouse: Warehouse,\n    inventory: Inventory,\n  };\n\n  const systemKey: keyof ISystemMap = system;\n\n  const SystemSpecificContent = systemMap[systemKey];\n\n  return (\n    <Container>\n      <ReturnContainer>\n        <ReturnText>{\"< \"}RETURN TO ORDERS</ReturnText>\n      </ReturnContainer>\n      <Header>\n        <Text size={ESizes.VeryLarge} weight={EWeights.Bold}>\n          Order #{orderInfo.orderNumber}\n        </Text>\n        <Text size={ESizes.Small} color={ETextColors.Gray}>\n          {format(new Date(orderInfo.date), \"MMM d, yyyy\")}\n        </Text>\n        <Text size={ESizes.Small}>Sales Channel: {orderInfo.channel}</Text>\n      </Header>\n      <ItemSummary>\n        <ItemSummaryRowUnderLined>\n          <LeftAlignedRow>\n            <Text>{orderInfo.lineItems.length} Items</Text>\n          </LeftAlignedRow>\n          <RightAlignedRow>\n            <Text size={ESizes.Small} color={ETextColors.Primary}>\n              To Pick\n            </Text>\n            <PickIcon />\n          </RightAlignedRow>\n        </ItemSummaryRowUnderLined>\n        <SystemSpecificContent {...orderInfo} />\n      </ItemSummary>\n    </Container>\n  );\n};\n\nexport default Order;\n","import { RawOrder } from \"./Integrations\";\n\nexport const IntegrationOrder1: RawOrder = {\n  integration: {\n    name: \"shopify\",\n  },\n  created_at: \"2021-03-09T00:17:05.485Z\",\n  payload: {\n    id: 1123978,\n    order_number: \"98798379234\",\n    order_line_items: [\n      {\n        product_variant_id: 239823,\n        SKU: \"P4321\",\n        description: \"Large ripped jeans\",\n        quantity: 3,\n        UnitPrice: 150,\n        options: [\n          {\n            name: \"colour\",\n            value: \"blue\",\n            option_id: 14238,\n          },\n          {\n            name: \"size\",\n            value: \"L\",\n            option_id: 23904,\n          },\n        ],\n      },\n      {\n        product_variant_id: 5678,\n        SKU: \"S4321\",\n        description: \"US 6 Pink Heels\",\n        quantity: 3,\n        UnitPrice: 200,\n        options: [\n          {\n            name: \"colour\",\n            value: \"pink\",\n            option_id: 394733,\n          },\n          {\n            name: \"size\",\n            value: \"6\",\n            option_id: 29374,\n          },\n        ],\n      },\n    ],\n    shipping_purchased: {\n      service_name: \"Express\",\n      amount_paid: 11,\n      currency: \"USD\",\n    },\n    customer_details: {\n      id: 793875,\n      name: \"Angela Potter\",\n      email: \"angela.potter@gmail.com\",\n    },\n    shipping_details: {\n      contact_name: \"Angela Potter\",\n      contact_email: \"angela.potter@gmail.com\",\n      address: [\n        \"1 Bluxome st\",\n        \"San Francisco\",\n        \"CA\",\n        \"940176\",\n        \"United States\",\n      ],\n    },\n  },\n};\nexport const IntegrationOrder2: RawOrder = {\n  integration: {\n    name: \"woo_commerce\",\n  },\n  created_at: \"2021-03-09T00:17:05.485Z\",\n  payload: {\n    Id: \"052ac9b7-ab0c-409f-875a-537ee994d6a1\",\n    Ref: \"12523453\",\n    Currency: \"USD\",\n    LineItems: [\n      {\n        VariantId: \"6650de76-fe01-4537-a340-b8eab9d6f59a\",\n        Sku: \"P4321\",\n        Description: \"Large ripped jeans\",\n        Quantity: 3,\n        UnitPrice: 150,\n        Options: [\n          \"de41bcdf-1858-49eb-9cea-2acf4c31ab0c\",\n          \"f184143f-2abd-4d6b-92d6-500ddf67af44\",\n        ],\n      },\n      {\n        VariantId: \"af9b87fb-b81d-431e-8394-a589d69aea7a\",\n        Sku: \"S4321\",\n        Description: \"US 6 Pink Heels\",\n        Quantity: 3,\n        UnitPrice: 200,\n        Options: [\n          \"1013eaf7-f2b4-4e7f-9216-48b2fdb39009\",\n          \"6202b3d9-f23c-4d0a-86f1-294d2a4220ca\",\n        ],\n      },\n    ],\n    Options: [\n      {\n        Id: \"de41bcdf-1858-49eb-9cea-2acf4c31ab0c\",\n        Name: \"colour\",\n        Value: \"blue\",\n      },\n      {\n        Id: \"f184143f-2abd-4d6b-92d6-500ddf67af44\",\n        Name: \"size\",\n        Value: \"L\",\n      },\n      {\n        Id: \"1013eaf7-f2b4-4e7f-9216-48b2fdb39009\",\n        Name: \"colour\",\n        Value: \"pink\",\n      },\n      {\n        Id: \"6202b3d9-f23c-4d0a-86f1-294d2a4220ca\",\n        Name: \"size\",\n        Value: \"6\",\n      },\n    ],\n    ShippingType: \"Express\",\n    ShippingPrice: 11.0,\n    CustomerId: \"0edf5835-39d1-459f-983c-e9f3d07fa844\",\n    CustomerName: \"Angela Potter\",\n    CustomerEmail: \"angela.potter@gmail.com\",\n    ShippingContactName: \"Angela Potter\",\n    ShippingContactEmail: \"angela.potter@gmail.com\",\n    ShippingAddress: [\n      \"1 Bluxome st\",\n      \"San Francisco\",\n      \"CA\",\n      \"940176\",\n      \"United States\",\n    ],\n  },\n};\n","import React from \"react\";\nimport \"typeface-roboto\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Order from \"./components/Order\";\nimport Text from \"./components/Text\";\nimport { IntegrationOrder1, IntegrationOrder2 } from \"./util/data\";\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: start;\n  margin: 0 auto;\n  padding-right: 300px;\n  width: 1014px;\n`;\n\nconst Nav = styled.div`\n  position: sticky;\n  top: 36px;\n  margin-top: 36px;\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  > * + * {\n    margin-top: 8px;\n  }\n`;\n\nfunction App() {\n  return (\n    <Router>\n      <Container>\n        <Nav>\n          <Text>\n            <Link to=\"/coding-test/1/warehouse\">\n              Integration 1 - Warehouse View\n            </Link>\n          </Text>\n          <Text>\n            <Link to=\"/coding-test/2/warehouse\">\n              Integration 2 - Warehouse View\n            </Link>\n          </Text>\n          <Text>\n            <Link to=\"/coding-test/1/inventory\">\n              Integration 1 - Inventory View\n            </Link>\n          </Text>\n          <Text>\n            <Link to=\"/coding-test/2/inventory\">\n              Integration 2 - Inventory View\n            </Link>\n          </Text>\n        </Nav>\n\n        <Switch>\n          <Route path=\"/coding-test/1/warehouse\">\n            <Order order={IntegrationOrder1} system={\"warehouse\"} />\n          </Route>\n          <Route path=\"/coding-test/2/warehouse\">\n            <Order order={IntegrationOrder2} system={\"warehouse\"} />\n          </Route>\n          <Route path=\"/coding-test/1/inventory\">\n            <Order order={IntegrationOrder1} system={\"inventory\"} />\n          </Route>\n          <Route path=\"/coding-test/2/inventory\">\n            <Order order={IntegrationOrder2} system={\"inventory\"} />\n          </Route>\n        </Switch>\n      </Container>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}